program         -> declaration* EOF;
declaration     -> varDecl | statement;
varDecl         -> "var" IDENTIFIER ("=" expression)? ";";
statement       -> exprStmt | forStmt | ifStmt | printStmt | block | whileStmt;
forStmt         -> "for" "(" IDENTIFIER "," rangeExpr ")" # for (i, 0..10:+1) {}
whileStmt       -> "while" "(" expression ")" statement;
ifStmt          -> "if" "(" expression ")" statement ("else" statement)?;
block           -> "{" declaration* "}";
exprStmt        -> expression ";" ;
printStmt       -> "print" expression ";";
expression      -> assignment;
assignment      -> IDENTIFIER "=" assignment | logical_or;
logical_or      -> logical_and ("or" logical_and)*;
logical_and     -> equality ("and" equality)*;
equality        -> comparison ( ("!=" | "==") comparison )* ;
comparison      -> term ( (">" | "<" | ">=" | "<=" ) term )* ;
term            -> factor ( ("-" | "+") factor )* ;
factor          -> unary ( ("/", "*") unary ) *
unary           -> ("!" | "-")? primary;
primary         -> NUMBER | STRING | "true" | "false" | "nil" | "(" expression ")" | IDENTIFIER;